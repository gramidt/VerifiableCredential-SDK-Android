# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java     
trigger:
- master

pr:
- master

pool:
  name: Azure Pipelines
  demands: java

steps:
- task: Gradle@3
  displayName: 'gradlew clean build'
  inputs:
    tasks: clean build
    publishJUnitResults: false
    jdkVersionOption: 1.11
    gradleOptions: '-Xmx4608M'
  
- task: Gradle@3
  displayName: 'gradlew -Pcoverage jacocoCoverageReport'
  inputs:
    tasks: '-Pcoverage jacocoCoverageReport'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: 'sdk/build/outputs/aar/'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage from $(System.DefaultWorkingDirectory)/sdk/build/reports/jacoco/jacocoCoverageReport/jacocoCoverageReport.xml'
  inputs:
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/sdk/build/reports/jacoco/jacocoCoverageReport/jacocoCoverageReport.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/sdk/build/reports/jacoco/jacocoCoverageReport/html'

- task: Gradle@2
  displayName: 'gradlew lint'
  inputs:
    tasks: lint
    publishJUnitResults: false

- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
  inputs:
    verbosity: Normal
    failOnAlert: true